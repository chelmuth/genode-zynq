assert_spec arm_v7a

if {![expr [have_board zynq_usrp_e31x] || [have_board zynq_zybo_z7]]} {
	puts "Test requires board zynq_usrp_e31x or zynq_zybo_z7"
	exit
}

create_boot_directory
import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/src/init \
                  [depot_user]/src/report_rom \
                  [depot_user]/src/fs_query \
                  [depot_user]/src/vfs \
                  [depot_user]/src/part_block \
                  [depot_user]/src/zynq_platform \
                  [depot_user]/src/zynq_sd_card \
                  [depot_user]/raw/[board]-devices \
                  [depot_user]/src/vfs_rump

build {
	app/block_tester
}

proc write_test {} {
	if {[get_cmd_switch --autopilot]} {
		return {<sequential start="0" write="yes" length="256M" size="1M" io_buffer="8M" batch="4"/>}
	}
	return ""
}

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default caps="100" ram="1M"/>

	<start name="zynq_platform" managing_system="yes">
		<provides><service name="Platform"/></provides>
		<config>
			<policy label="sd_card -> " info="yes">
				<device name="sdhci0"/>
			</policy>
		</config>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="timer">
		<provides><service name="Timer"/></provides>
		<route> <any-service> <parent/> </any-service> </route>
	</start>

	<start name="report_rom" ram="2M">
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="yes">
		</config>
		<route> <any-service> <parent/> </any-service> </route>
	</start>

	<start name="sd_card" caps="300" ram="16M">
		<binary name="zynq_sd_card"/>
		<provides><service name="Block"/></provides>
		<config report="yes">
			<default-policy device="mmcblk0"/>
		</config>
		<route>
			<service name="ROM" label="dtb">
				<parent label="zynq_sd_card.dtb"/>
			</service>
			<service name="ROM"> <parent/> </service>
			<service name="PD">  <parent/> </service>
			<service name="RM">  <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
			<any-service> <any-child/> </any-service>
		</route>
	</start>

	<start name="block_tester" ram="64M">
		<binary name="block_tester"/>
		<config verbose="yes" report="no" log="yes" stop_on_error="no">
			<tests>
				<sequential start="0" length="256M" size="1M" io_buffer="8M" batch="4"/>
				} [write_test] {
			</tests>
		</config>
		<route>
			<service name="ROM"> <parent/> </service>
			<service name="PD">  <parent/> </service>
			<service name="RM">  <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
			<service name="Block"> <child name="part_block"/> </service>
			<any-service> <any-child/> </any-service>
		</route>
	</start>

	<start name="part_block" ram="10M">
		<provides> <service name="Block"/> </provides>
		<config io_buffer="1M">
			<report partitions="yes"/>
			<policy label_prefix="fs_query" partition="1" writeable="no"/>
			<policy label_prefix="block_tester" partition="3" writeable="yes"/>
		</config>
		<route>
			<service name="ROM"> <parent/> </service>
			<service name="PD">  <parent/> </service>
			<service name="RM">  <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
			<service name="Block"> <child name="sd_card"/> </service>
			<any-service> <any-child/> </any-service>
		</route>
	</start>

	<start name="fs_query" caps="200" ram="32M">
		<config>
			<vfs>
				<rump fs="msdos" ram="20M" writeable="no"/>
			</vfs>
			<query path="/"/>
		</config>
		<route>
			<service name="Block"> <child name="part_block"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
</config> }

build_boot_image [build_artifacts]

run_genode_until "--- all tests finished ---" 60

# vi: set ft=tcl :
